{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Aborted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "ItemReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "PurchaseConfirmed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "SellerRefunded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "abort",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyer",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmPurchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmReceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "refundSeller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum Purchase.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "value",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"abort()": {
					"notice": "中止购买并回收以太币。 只能在合约被锁定之前由卖家调用。"
				},
				"confirmPurchase()": {
					"notice": "买家确认购买。 交易必须包含 `2 * value` 个以太币。 以太币会被锁定，直到 confirmReceived 被调用。"
				},
				"confirmReceived()": {
					"notice": "确认你（买家）已经收到商品。 这会释放被锁定的以太币。"
				},
				"refundSeller()": {
					"notice": "This function refunds the seller, i.e. pays back the locked funds of the seller."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"learn_list/20220225_toupiaocontract/sefeshopping_conctract.sol": "Purchase"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"learn_list/20220225_toupiaocontract/sefeshopping_conctract.sol": {
			"keccak256": "0xb7038ec4ef4b74923a323abf83566353401f3b38102bc42b20daaf845fafbd41",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://0e65695089aabd742dc265ca5bd54c23c7630363a2b783eedca4ee79cf64db55",
				"dweb:/ipfs/Qmc6L41Vo7LRZRJHFR1pFotCy8CXCar41e6rFGi5qY5rCL"
			]
		}
	},
	"version": 1
}